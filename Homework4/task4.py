# Напишите функцию multiplication_chain, которая принимает положительное число num,
# и возвращает количество раз count_multy, которое вы должны перемножить цифры числа num и полученных произведений,
# пока не получите одну цифру.
# Например (Ввод --> Вывод) :
#
# 39 --> 3 (потому что 3*9 = 27, 2*7 = 14, 1*4 = 4, вот 4 одна цифра. Итого 3 итерации)
# 999 --> 4 (потому что 9*9*9 = 729, 7*2*9 = 126, 1*2*6 = 12, наконец 1*2 = 2, Итого 4 итерации)
# 4 --> 0 (4 уже одна цифра, а значит мы проделали 0 итераций)

def multiplication_chain(num):
    count_multy = 0
    num_list = []
    while num > 0:  # будем убирать у числа по 1 цифре, пока они не кончатся
        num_list.append(num % 10)  # цифры, которые убираем добавляем в список
        num //= 10  # здесь убираем цифру из числа
        if num == 0:  # проверяем, что цифры в числе закончились
            if len(num_list) == 1:  # если в числе была одна цифра, то можем сразу выходить, перемножение не требуется
                break
            new_num = 1  # переменная для записи произведения цифр
            for elem in num_list:  # идем по списку цифр числа
                new_num *= elem  # записываем произведение цифр в переменную
            num = new_num  #  присваиваем изначальному числу получившееся произведение
            count_multy += 1  # увеличиваем счетчик итераций
            num_list.clear()  # очищаем список
    return count_multy

# Ниже НИЧЕГО НЕ НАДО ИЗМЕНЯТЬ


data = [
    39, 4, 25, 999, 5050, 222333444
]

test_data = [
    3, 0, 2, 4, 1, 4
]


for i, d in enumerate(data):
    assert multiplication_chain(d) == test_data[i], f'С набором {d} есть ошибка, не проходит проверку'
    print(f'Тестовый набор {d} прошёл проверку')
print('Всё ок')
